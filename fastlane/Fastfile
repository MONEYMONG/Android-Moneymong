# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Increment the Version Code"
  lane :increment_code do
    latest_release = firebase_app_distribution_get_latest_release(
            app: "#{ENV["APP_ID"]}"
    )

    increment_version_code(
        gradle_file_path: './app/build.gradle.kts',
        version_code: latest_release[:buildVersion].to_i + 1
    )

    git_add(
      path: ["./app/build.gradle.kts"]
    )
    git_commit(
      path: ["./app/build.gradle.kts"],
      message: "INCREMENT VERSION CODE"
    )

    push_to_git_remote
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Send Slack Message when Deploy to the Firebase Distribution"
  lane :send_slack_message do |options|
    slack(
        message: options[:msg],
        slack_url: options[:webhook_url]
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
#     increment_code

    gradle(
        task: 'bundle',
        flavor: "live",
        build_type: 'Release',
        properties: {
                "android.injected.signing.store.file" => "#{ENV["KEYSTORE_FILE"]}",
                "android.injected.signing.store.password" => "#{ENV["KEYSTORE_PASSWORD"]}",
                "android.injected.signing.key.alias" => "#{ENV["KEYSTORE_KEY_ALIAS"]}",
                "android.injected.signing.key.password" => "#{ENV["KEYSTORE_KEY_PASSWORD"]}",
              },
    )
    upload_to_play_store(
        skip_upload_metadata: true,
        skip_upload_images: true,
        skip_upload_screenshots: true,
        skip_upload_apk: true
    )
  end

  desc "Deploy a new version to the Firebase Distribution"
  lane :distribute do
#     increment_code
    latest_release = firebase_app_distribution_get_latest_release(
                app: "#{ENV["APP_ID"]}"
    )
    release_note = "머니몽 Android TB [#{latest_release[:displayVersion]} (#{latest_release[:buildVersion]})]"

#     gradle(
#         task: 'clean assemble',
#         flavor: "tb",
#         build_type: 'Release'
#     )
#     firebase_app_distribution(
#         service_credentials_file: "#{ENV["FIREBASE_CREDENTIALS"]}",
#         app: "#{ENV["APP_ID"]}",
#         groups: "fastlane/testers-groups.txt",
#         release_notes: release_note
#     )

    send_slack_message(
        msg: "#{release_note} 배포 완료",
        webhook_url: "#{ENV["WEBHOOK_URL"]}"
    )
    end


end
